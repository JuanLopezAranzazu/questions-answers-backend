CREATE TABLE "user"
(
  id SERIAL NOT NULL,
  username CHARACTER VARYING(255) NOT NULL,
  password CHARACTER VARYING(255) NOT NULL,
  createdAt TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (id)
);

CREATE TABLE "category"
(
  id SERIAL NOT NULL,
  name CHARACTER VARYING(255) NOT NULL,
  createdAt TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (id)
);

INSERT INTO public."category"(name) VALUES('Technology');

CREATE TABLE "question"
(
  id SERIAL NOT NULL,
  title CHARACTER VARYING(255) NOT NULL,
  description CHARACTER VARYING(255) NOT NULL,
  createdAt TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
	categoryId INTEGER NOT NULL,
  userId INTEGER NOT NULL,
  PRIMARY KEY (id),
  CONSTRAINT "fk_category_id" FOREIGN KEY (categoryId)
  REFERENCES "category" (id) MATCH SIMPLE
  ON UPDATE NO ACTION
  ON DELETE NO ACTION
  NOT VALID,
  CONSTRAINT "fk_user_id" FOREIGN KEY (userId)
  REFERENCES "user" (id) MATCH SIMPLE
  ON UPDATE NO ACTION
  ON DELETE NO ACTION
  NOT VALID
);

CREATE TABLE "response"
(
  id SERIAL NOT NULL,
  text CHARACTER VARYING(255) NOT NULL,
  createdAt TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
	questionId INTEGER NOT NULL,
  userId INTEGER NOT NULL,
  PRIMARY KEY (id),
  CONSTRAINT "fk_question_id" FOREIGN KEY (questionId)
  REFERENCES "question" (id) MATCH SIMPLE
  ON UPDATE NO ACTION
  ON DELETE NO ACTION
  NOT VALID,
  CONSTRAINT "fk_user_id" FOREIGN KEY (userId)
  REFERENCES "user" (id) MATCH SIMPLE
  ON UPDATE NO ACTION
  ON DELETE NO ACTION
  NOT VALID
);
